function MATLc
% Generated by MATL compiler, 19-Dec-2015 19:15:04

% Set initial conditions
warningState = warning;
format compact; format long; warning('off','all');
rng('shuffle')
diary off; delete defout; diary defout
F = false; T = true;
P = pi; Y = inf; N = NaN; M = -1; G = -1j;
defaultInputPrompt = '> ';
STACK = {};
S_IN = []; S_OUT = [];
CB_H = { 2 }; CB_I = { 3 }; CB_J = { 1j }; CB_K = { 4 }; CB_L = { {[1 0]} {[0 -1 1]} {[1 2 0]} {[2 2 0]} {[1 -1j]} {[2 0]} {[1 -1j 0]} {[1 3 2]} {[3 1 2]} {3600} {86400} };
if exist('defin','file'), fid = fopen('defin','r'); STACK{end+1} = reshape(fread(fid,inf,'*char'),1,[]); fclose(fid); end

% [10 5 20 30]
STACK{end+1} = [10 5 20 30];

% 1
STACK{end+1} = 1;

% $
S_IN = STACK{end}; STACK(end) = [];

% TFF
STACK{end+1} = [true,false,false];

% #
S_OUT = STACK{end}; STACK(end) = [];

% Zd
if isempty(S_IN), S_IN = 2; end
if isnumeric(S_IN) && numel(S_IN) == 1, if S_IN < 1 || S_IN > 2, error('MATL:runner', 'MATL run-time error: incorrect input specification'), end
elseif islogical(S_IN), if nnz(S_IN) < 1 || nnz(S_IN) > 2, error('MATL:runner', 'MATL run-time error: incorrect input specification'), end
else error('MATL:runner', 'MATL run-time error: input specification not recognized'), end
if isnumeric(S_IN), nin = -S_IN+1:0; else nin = find(S_IN)-numel(S_IN); end
in = STACK(end+nin);
if isempty(S_OUT), S_OUT = 1; end
if isnumeric(S_OUT) && numel(S_OUT) == 1, if S_OUT < 1 || S_OUT > 3, error('MATL:runner', 'MATL run-time error: incorrect output specification'), end
elseif islogical(S_OUT), if numel(S_OUT) < 1 || numel(S_OUT) > 3, error('MATL:runner', 'MATL run-time error: incorrect output specification'), end
else error('MATL:runner', 'MATL run-time error: output specification not recognized'), end
if isnumeric(S_OUT), nout = S_OUT; else nout = numel(S_OUT); end
out = cell(1,nout);
STACK(end+nin) = [];
if numel(in)==1 && numel(out)==1, x=in{1}(1); for t=in{1}, x=gcd(x,t); end; out{1}=x;
else [out{:}] = gcd(in{:}); end
if islogical(S_OUT), out = out(S_OUT); end
STACK = [STACK out];
S_IN = [];
S_OUT = [];
clear nin nout in out

% XD (implicit)
if isempty(S_IN), S_IN = numel(STACK); end
if isnumeric(S_IN) && numel(S_IN) == 1, if S_IN < 0 || S_IN > inf, error('MATL:runner', 'MATL run-time error: incorrect input specification'), end
elseif islogical(S_IN), if nnz(S_IN) < 0 || nnz(S_IN) > inf, error('MATL:runner', 'MATL run-time error: incorrect input specification'), end
else error('MATL:runner', 'MATL run-time error: input specification not recognized'), end
if isnumeric(S_IN), nin = -S_IN+1:0; else nin = find(S_IN)-numel(S_IN); end
in = STACK(end+nin);
if isempty(S_OUT), S_OUT = 0; end
if isnumeric(S_OUT) && numel(S_OUT) == 1, if S_OUT < 0 || S_OUT > 0, error('MATL:runner', 'MATL run-time error: incorrect output specification'), end
elseif islogical(S_OUT), if numel(S_OUT) < 0 || numel(S_OUT) > 0, error('MATL:runner', 'MATL run-time error: incorrect output specification'), end
else error('MATL:runner', 'MATL run-time error: output specification not recognized'), end
if isnumeric(S_OUT), nout = S_OUT; else nout = numel(S_OUT); end
out = cell(1,nout);
STACK(end+nin) = [];
data = in;
kk = cellfun(@iscell, data); 
while any(kk)
data(~kk) = num2cell({data{~kk}}); kk = kk(:).';
for k = find(kk), data{k} = data{k}(:); end
data = vertcat(data{:}); kk = cellfun(@iscell, data); end
for k = 1:numel(data), disp(num2str(data{k}, '%.16g ')), end
clear data kk k
if islogical(S_OUT), out = out(S_OUT); end
STACK = [STACK out];
S_IN = [];
S_OUT = [];
clear nin nout in out

% Set final conditions
diary off; warning(warningState);